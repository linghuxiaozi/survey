package com.atguigu.survey.interceptor;

import java.util.HashSet;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;
import org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler;

import com.atguigu.survey.e.UserOperationForbiddenException;
import com.atguigu.survey.utils.GlobalNames;

public class LoginInterceptor extends HandlerInterceptorAdapter{
	
	@Override
	public boolean preHandle(HttpServletRequest request,
			HttpServletResponse response, Object handler) throws Exception {
		//排除静态资源
		if(handler instanceof DefaultServletHttpRequestHandler) {
			return true;
		}
		
		//创建一个集合对象，保存所有公共资源URL地址
		Set<String> publicResSet = new HashSet<>();
		publicResSet.add("/guest/user/toLoginUI");
		publicResSet.add("/guest/user/toRegistUI");
		publicResSet.add("/guest/user/login");
		publicResSet.add("/guest/user/regist");
		publicResSet.add("/guest/user/logout");
		publicResSet.add("/manager/admin/toMainUI");
		publicResSet.add("/manager/admin/toLoginUI");
		publicResSet.add("/manager/admin/login");
		publicResSet.add("/manager/admin/logout");
		
		//获取当前请求的servletPath值
		String servletPath = request.getServletPath();
		
		//检查servletPath是否在publicResSet中
		if(publicResSet.contains(servletPath)) {
			System.out.println("公共资源，直接放行"+servletPath);
			return true;
		}
		
		//检查当前资源是否是用户以登录状态访问的
		HttpSession session = request.getSession();
		Object user = session.getAttribute(GlobalNames.LOGIN_USER);
		
		//如果不是登录状态
		if(user == null) {
			//跳转到登录的表单页面，并显示错误消息
			throw new UserOperationForbiddenException("请登录后再执行这个操作！");
		}
		
		//如果已经是登录状态，则直接放行
		return true;
	}

}
